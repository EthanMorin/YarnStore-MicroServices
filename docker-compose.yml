name: yarn_store
services:
  # Catalog Service
  catalog:
    container_name: catalog
    build: ./yarn_catalog
    ports:
      - "8080"
    restart: always
    depends_on:
      - mongo
      - consul
    networks:
      - yarn_exchange
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.catalog.rule=PathPrefix(`/catalog`)"
      - "traefik.http.routers.catalog.service=catalog"
      - "traefik.http.services.catalog.loadbalancer.server.port=8080"

  # Cart Service
  # cart:
  #   container_name: cart
  #   build: ./yarn_cart
  #   ports:
  #     - "8080"
  #   restart: always
  #   networks:
  #     - yarn_exchange
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.catalog.rule=PathPrefix(`/cart`)"
  #     - "traefik.http.routers.catalog.service=cart"
  #     - "traefik.http.services.catalog.loadbalancer.server.port=8080"

  # Email Service
  # email:
  #   container_name: email
  #   build: ./yarn_email
  #   ports:
  #     - "8080"
  #   restart: always
  #   networks:
  #     - yarn_exchange
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.catalog.service=email"

  # Service Registry
  consul:
    image: hashicorp/consul:latest
    container_name: consul
    restart: always
    ports:
      - "8500:8500"
    networks:
      - yarn_exchange
    volumes:
      - ./consul/consul.json:/consul/config/consul.json

  # Gateway
  traefik:
    image: traefik:v2.5
    container_name: traefik
    restart: always
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - yarn_exchange
    depends_on:
      - consul
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # DataBases
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
    networks:
      - yarn_exchange

  cache:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    # command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_cache:/data
    networks:
      - yarn_exchange

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq/
      - rabbit_log:/var/log/rabbitmq
    networks:
      - yarn_exchange

volumes:
  mongodb_data: {}
  redis_cache: {}
  rabbit_data: {}
  rabbit_log: {}
networks:
  yarn_exchange:
    driver: bridge
