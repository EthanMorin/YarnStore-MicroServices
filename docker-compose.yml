version: "3"
services:
  # Catalog Service
  catalog:
    container_name: catalog
    build: ./yarn_catalog
    ports:
      - "8080"
    restart: on-failure
    depends_on:
      - mongo
    networks:
      - yarn_exchange

  # Cart Service
  # cart:
    # container_name: cart
    # build: ./yarn_cart
    # ports:
    #   - "8081:8080"
    # restart: on-failure
    # networks:
    #   - yarn_exchange

  # Email Service
  # email:
  #   container_name: email
  #   build: ./yarn_email
  #   ports:
  #     - "8080"
  #   restart: on-failure
  #   networks:
  #     - yarn_exchange

  # apigateway
  # proxy:
  #   image: traefik:latest
  #   command:
  #     #- "--log.level=DEBUG"
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #   ports: 
  #     - "80:80"
  #     - "8080:8080"

  # Service Regestry
  registry:
    image: steeltoeoss/eureka-server:latest 
    ports:
      - "8761:8761"


  # DataBases
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: on-failure
    networks:
      - yarn_exchange

  cache:
    image: redis:latest
    restart: on-failure
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_cache:/data
    networks:
      - yarn_exchange

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbit_data:/var/lib/rabbitmq/
      - rabbit_log:/var/log/rabbitmq
    networks:
      - yarn_exchange

volumes:
  mongodb_data: {}
  redis_cache: {}
  rabbit_data: {}
  rabbit_log: {}
networks:
  yarn_exchange:
    driver: bridge
